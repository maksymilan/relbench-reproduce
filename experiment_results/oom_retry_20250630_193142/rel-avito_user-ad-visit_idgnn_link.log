/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/relbench/modeling/graph.py:217: UserWarning: Sparse CSR tensor support is in beta state. If you miss a functionality in the sparse tensor support, please submit a feature request to https://github.com/pytorch/pytorch/issues. (Triggered internally at ../aten/src/ATen/SparseCsrTensorImpl.cpp:53.)
  dst_node_indices = sparse_coo.to_sparse_csr()
Loading Database object from /home/dengyan/.cache/relbench/rel-avito/db...
Done in 3.37 seconds.
Loading Database object from /home/dengyan/.cache/relbench/rel-avito/db...
Done in 3.31 seconds.
  0%|          | 0/170 [00:00<?, ?it/s]  1%|          | 1/170 [00:00<02:44,  1.02it/s]  1%|          | 2/170 [00:01<01:17,  2.15it/s]  2%|▏         | 4/170 [00:01<00:38,  4.30it/s]  4%|▎         | 6/170 [00:01<00:27,  5.90it/s]  5%|▍         | 8/170 [00:01<00:22,  7.20it/s]  6%|▌         | 10/170 [00:01<00:19,  8.12it/s]  7%|▋         | 12/170 [00:02<00:17,  8.94it/s]  8%|▊         | 14/170 [00:02<00:16,  9.46it/s]  9%|▉         | 16/170 [00:02<00:15,  9.92it/s] 11%|█         | 18/170 [00:02<00:14, 10.19it/s] 12%|█▏        | 20/170 [00:02<00:14, 10.34it/s] 13%|█▎        | 22/170 [00:02<00:14, 10.47it/s] 14%|█▍        | 24/170 [00:03<00:13, 10.54it/s] 15%|█▌        | 26/170 [00:03<00:13, 10.75it/s] 16%|█▋        | 28/170 [00:03<00:13, 10.89it/s] 18%|█▊        | 30/170 [00:03<00:12, 10.88it/s] 19%|█▉        | 32/170 [00:03<00:12, 10.93it/s] 20%|██        | 34/170 [00:04<00:12, 10.94it/s] 21%|██        | 36/170 [00:04<00:12, 10.98it/s] 22%|██▏       | 38/170 [00:04<00:12, 10.94it/s] 24%|██▎       | 40/170 [00:04<00:11, 10.88it/s] 25%|██▍       | 42/170 [00:04<00:11, 10.99it/s] 26%|██▌       | 44/170 [00:04<00:11, 10.98it/s] 27%|██▋       | 46/170 [00:05<00:11, 11.02it/s] 28%|██▊       | 48/170 [00:05<00:10, 11.09it/s] 29%|██▉       | 50/170 [00:05<00:10, 11.09it/s] 31%|███       | 52/170 [00:05<00:10, 10.98it/s] 32%|███▏      | 54/170 [00:05<00:10, 10.97it/s] 33%|███▎      | 56/170 [00:06<00:10, 11.01it/s] 34%|███▍      | 58/170 [00:06<00:10, 11.14it/s] 35%|███▌      | 60/170 [00:06<00:09, 11.04it/s] 36%|███▋      | 62/170 [00:06<00:09, 10.82it/s] 38%|███▊      | 64/170 [00:06<00:09, 10.90it/s] 39%|███▉      | 66/170 [00:06<00:09, 10.86it/s] 40%|████      | 68/170 [00:07<00:09, 10.93it/s] 41%|████      | 70/170 [00:07<00:09, 11.00it/s] 42%|████▏     | 72/170 [00:07<00:08, 10.99it/s] 44%|████▎     | 74/170 [00:07<00:08, 11.13it/s] 45%|████▍     | 76/170 [00:07<00:08, 11.14it/s] 46%|████▌     | 78/170 [00:08<00:08, 11.06it/s] 47%|████▋     | 80/170 [00:08<00:08, 11.13it/s] 48%|████▊     | 82/170 [00:08<00:08, 10.94it/s] 49%|████▉     | 84/170 [00:08<00:07, 10.99it/s] 51%|█████     | 86/170 [00:08<00:07, 11.03it/s] 52%|█████▏    | 88/170 [00:08<00:07, 11.03it/s] 53%|█████▎    | 90/170 [00:09<00:07, 11.05it/s] 54%|█████▍    | 92/170 [00:09<00:07, 11.07it/s] 55%|█████▌    | 94/170 [00:09<00:06, 10.93it/s] 56%|█████▋    | 96/170 [00:09<00:06, 11.05it/s] 58%|█████▊    | 98/170 [00:09<00:06, 11.10it/s] 59%|█████▉    | 100/170 [00:10<00:06, 11.08it/s] 60%|██████    | 102/170 [00:10<00:06, 11.14it/s] 61%|██████    | 104/170 [00:10<00:05, 11.16it/s] 62%|██████▏   | 106/170 [00:10<00:05, 11.14it/s] 64%|██████▎   | 108/170 [00:10<00:05, 11.15it/s] 65%|██████▍   | 110/170 [00:10<00:05, 10.93it/s] 66%|██████▌   | 112/170 [00:11<00:05, 11.05it/s] 67%|██████▋   | 114/170 [00:11<00:05, 11.17it/s] 68%|██████▊   | 116/170 [00:11<00:04, 10.97it/s] 69%|██████▉   | 118/170 [00:11<00:04, 10.83it/s] 71%|███████   | 120/170 [00:11<00:04, 10.85it/s] 72%|███████▏  | 122/170 [00:12<00:04, 10.95it/s] 73%|███████▎  | 124/170 [00:12<00:04, 11.03it/s] 74%|███████▍  | 126/170 [00:12<00:04, 10.98it/s] 75%|███████▌  | 128/170 [00:12<00:03, 10.94it/s] 76%|███████▋  | 130/170 [00:12<00:03, 10.98it/s] 78%|███████▊  | 132/170 [00:12<00:03, 10.96it/s] 79%|███████▉  | 134/170 [00:13<00:03, 11.12it/s] 80%|████████  | 136/170 [00:13<00:03, 11.00it/s] 81%|████████  | 138/170 [00:13<00:02, 10.96it/s] 82%|████████▏ | 140/170 [00:13<00:02, 11.01it/s] 84%|████████▎ | 142/170 [00:13<00:02, 11.11it/s] 85%|████████▍ | 144/170 [00:14<00:02, 11.07it/s] 86%|████████▌ | 146/170 [00:14<00:02, 11.10it/s] 87%|████████▋ | 148/170 [00:14<00:01, 11.22it/s] 88%|████████▊ | 150/170 [00:14<00:01, 11.13it/s] 89%|████████▉ | 152/170 [00:14<00:01, 11.20it/s] 91%|█████████ | 154/170 [00:14<00:01, 10.91it/s] 92%|█████████▏| 156/170 [00:15<00:01, 10.85it/s] 93%|█████████▎| 158/170 [00:15<00:01, 10.94it/s] 94%|█████████▍| 160/170 [00:15<00:00, 10.93it/s] 95%|█████████▌| 162/170 [00:15<00:00, 10.95it/s] 96%|█████████▋| 164/170 [00:15<00:00, 11.04it/s] 98%|█████████▊| 166/170 [00:16<00:00, 11.02it/s] 99%|█████████▉| 168/170 [00:16<00:00, 11.11it/s]100%|██████████| 170/170 [00:16<00:00, 11.23it/s]100%|██████████| 170/170 [00:16<00:00, 10.38it/s]
  0%|          | 0/59 [00:00<?, ?it/s]  0%|          | 0/59 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/home/dengyan/relbench-reproduce/examples/idgnn_link.py", line 199, in <module>
    val_pred = test(loader_dict["val"])
  File "/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/home/dengyan/relbench-reproduce/examples/idgnn_link.py", line 184, in test
    scores = torch.zeros(batch_size, task.num_dst_nodes, device=out.device)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 11.37 GiB. GPU 0 has a total capacity of 23.70 GiB of which 11.32 GiB is free. Including non-PyTorch memory, this process has 12.38 GiB memory in use. Of the allocated memory 9.02 GiB is allocated by PyTorch, and 2.19 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
