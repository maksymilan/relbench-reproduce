Unzipping contents of '/home/dengyan/.cache/relbench/rel-f1/tasks/driver-top3.zip' to '/home/dengyan/.cache/relbench/rel-f1/tasks/.'
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
/home/dengyan/miniconda3/envs/conda-relbench/lib/python3.10/site-packages/torch_frame/utils/io.py:113: UserWarning: Weights only load failed. Please file an issue to make `torch.load(weights_only=True)` compatible in your case. Please use `torch.serialization.add_safe_globals([scalar])` to allowlist this global.
  warnings.warn(f"{warn_msg} Please use "
Loading Database object from /home/dengyan/.cache/relbench/rel-f1/db...
Done in 0.05 seconds.
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:01,  1.14it/s] 67%|██████▋   | 2/3 [00:00<00:00,  2.32it/s]100%|██████████| 3/3 [00:01<00:00,  2.75it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.01it/s]100%|██████████| 2/2 [00:00<00:00, 16.97it/s]
Epoch: 01, Train loss: 0.607040447917411, Val metrics: {'average_precision': 0.23407884963404507, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6072100481983838}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.39it/s] 67%|██████▋   | 2/3 [00:00<00:00,  9.35it/s]100%|██████████| 3/3 [00:00<00:00,  9.83it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.59it/s]100%|██████████| 2/2 [00:00<00:00, 17.54it/s]
Epoch: 02, Train loss: 0.46033612798957235, Val metrics: {'average_precision': 0.24627644546335195, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6300370894626508}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.25it/s] 67%|██████▋   | 2/3 [00:00<00:00,  9.17it/s]100%|██████████| 3/3 [00:00<00:00,  9.85it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.92it/s]100%|██████████| 2/2 [00:00<00:00, 17.86it/s]
Epoch: 03, Train loss: 0.4495972866978543, Val metrics: {'average_precision': 0.23435212244834444, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6156492447725359}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.70it/s] 67%|██████▋   | 2/3 [00:00<00:00,  9.47it/s]100%|██████████| 3/3 [00:00<00:00, 10.02it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.72it/s]100%|██████████| 2/2 [00:00<00:00, 17.67it/s]
Epoch: 04, Train loss: 0.44466336722384536, Val metrics: {'average_precision': 0.2982928432866183, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6146816935729515}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.17it/s] 67%|██████▋   | 2/3 [00:00<00:00,  9.22it/s]100%|██████████| 3/3 [00:00<00:00,  9.86it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.77it/s]100%|██████████| 2/2 [00:00<00:00, 17.72it/s]
Epoch: 05, Train loss: 0.44201833804888985, Val metrics: {'average_precision': 0.29048527837140836, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6112952643744065}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.48it/s] 67%|██████▋   | 2/3 [00:00<00:00,  9.23it/s]100%|██████████| 3/3 [00:00<00:00,  9.79it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.76it/s]100%|██████████| 2/2 [00:00<00:00, 17.71it/s]
Epoch: 06, Train loss: 0.43841538275953407, Val metrics: {'average_precision': 0.2760645159652359, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6193761086524162}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.05it/s] 67%|██████▋   | 2/3 [00:00<00:00,  9.29it/s]100%|██████████| 3/3 [00:00<00:00,  9.80it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.79it/s]100%|██████████| 2/2 [00:00<00:00, 17.74it/s]
Epoch: 07, Train loss: 0.43625139899370147, Val metrics: {'average_precision': 0.2514450098184492, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6384046155775742}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.04it/s] 67%|██████▋   | 2/3 [00:00<00:00,  9.14it/s]100%|██████████| 3/3 [00:00<00:00,  9.85it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.78it/s]100%|██████████| 2/2 [00:00<00:00, 17.73it/s]
Epoch: 08, Train loss: 0.4308817465263037, Val metrics: {'average_precision': 0.2665714216208163, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6547096450520506}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.26it/s] 67%|██████▋   | 2/3 [00:00<00:00,  8.87it/s]100%|██████████| 3/3 [00:00<00:00,  9.72it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.85it/s]100%|██████████| 2/2 [00:00<00:00, 17.79it/s]
Epoch: 09, Train loss: 0.4171601695126282, Val metrics: {'average_precision': 0.30454874577434293, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.6714805325115121}
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  9.04it/s] 67%|██████▋   | 2/3 [00:00<00:00,  8.94it/s]100%|██████████| 3/3 [00:00<00:00,  9.69it/s]
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.44it/s]100%|██████████| 2/2 [00:00<00:00, 17.39it/s]
Epoch: 10, Train loss: 0.3954884638763408, Val metrics: {'average_precision': 0.3465178029871035, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.7165970865958323}
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 17.72it/s]100%|██████████| 2/2 [00:00<00:00, 17.66it/s]
Best Val metrics: {'average_precision': 0.359426692415043, 'accuracy': 0.7976190476190477, 'f1': 0.0, 'roc_auc': 0.7177617315582949}
  0%|          | 0/2 [00:00<?, ?it/s]100%|██████████| 2/2 [00:00<00:00, 18.45it/s]100%|██████████| 2/2 [00:00<00:00, 18.39it/s]
Best test metrics: {'average_precision': 0.3422988822580599, 'accuracy': 0.8236914600550964, 'f1': 0.0, 'roc_auc': 0.7865476066053512}
